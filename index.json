[{"authors":["jim"],"categories":null,"content":"Dr. Jim Webber is Neo4j’s Chief Scientist and Visiting Professor at Newcastle University. At Neo4j, Jim leads the Systems Research Group, working on a variety of database systems research topics including query languages and runtimes, scale, and fault-tolerance.\nHe also co-authored several books on graph technology including\n[https://jimwebber.org/publication/graph-databases/](Graph Databases)\n[https://jimwebber.org/publication/graph-databases-for-dummies/](Graph Databases for Dummies)\nand [https://jimwebber.org/publication/building-knowledge-graphs/](Building Knowledge Graphs).\nPrior to Neo4j, Jim worked on fault-tolerant distributed systems. First at Newcastle University startup Arjuna and then for a variety of clients for global consulting firm ThoughtWorks. Along the way Jim co-authored the distrubuted systems books [https://jimwebber.org/publication/rest-in-practice/](REST in Practice) and [https://jimwebber.org/publication/developing-enterprise-web-services/](Developing Enterprise Web Services - An Architect’s Guide).\nJim\u0026rsquo;s blog is located at https://jimwebber.org and he tweets sometimes at @jimwebber.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"76887015496b6bc3e7f2107145ecc1f8","permalink":"/author/dr.-jim-webber/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/dr.-jim-webber/","section":"authors","summary":"Dr. Jim Webber is Neo4j’s Chief Scientist and Visiting Professor at Newcastle University. At Neo4j, Jim leads the Systems Research Group, working on a variety of database systems research topics including query languages and runtimes, scale, and fault-tolerance.","tags":null,"title":"Dr. Jim Webber","type":"authors"},{"authors":["Paul Ezhilchelvan","Isi Mitrani","Jim Webber"],"categories":["Databases","Concurrency Control","Weak Isolation"],"content":"","date":1691366400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1691366400,"objectID":"a88ae65506281d95bd50865985fd6201","permalink":"/publication/2023-qest/","publishdate":"2023-09-20T01:00:00+01:00","relpermalink":"/publication/2023-qest/","section":"publication","summary":"A policy that reduces communication overheads by commit- ting together all transactions completed within an interval of time is examined. A model of the system involving two queues served alterna- tively with preemptions is analysed in the steady-state under Markovian assumptions. An exact and easily implementable solution is derived and is used in order to determine performance measures such as average oc- cupancy or average latency. The optimal length of the operative interval is evaluated numerically. A non-preemptive policy is simulated and is shown to be considerably less efficient than the preemptive one analysed here. A generalization to non-Markovian operative intervals is outlined.","tags":[],"title":"Analysis of an epoch commit protocol for distributed processing systems","type":"publication"},{"authors":["Jesùs Barrasa","Jim Webber"],"categories":[],"content":"","date":1687647600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1687647600,"objectID":"3a4c913ed87e554a03a008e4fc79fbee","permalink":"/publication/building-knowledge-graphs/","publishdate":"2023-06-25T00:00:00+01:00","relpermalink":"/publication/building-knowledge-graphs/","section":"publication","summary":"A practitioner's guide to building Knowledge Graphs for the enterprise.","tags":[],"title":"Building Knowledge Graphs - A Practitioner's Guide","type":"publication"},{"authors":["Niels de Jong","Jim Webber"],"categories":[],"content":"","date":1672754400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1672754400,"objectID":"50d04253b721e2ecb966a00e07e90b1b","permalink":"/publication/2023-01-patent-11544280/","publishdate":"2023-01-03T15:00:00+01:00","relpermalink":"/publication/2023-01-patent-11544280/","section":"publication","summary":"A method and apparatus for estimating the cardinality of graph pattern queries using graph statistics and metadata is presented. In various embodiments, node and edge labels are used to compute estimates for graph patterns (bi-grams) and the estimates for these patterns as composed to provide cardinality estimates of longer paths. The computation of bi-grams is low cost and requires only minimal changes to the existing query planner in the existing database machinery to be useful. The resulting estimates are used during query execution to minimize the amount of work needed to complete a query and return a faithful and accurate answer method.","tags":["Graph Databases","Query Planning"],"title":"Bi-gram cardinality estimation in a graph database","type":"publication"},{"authors":["Tobias Lindaaker","Jim Webber"],"categories":[],"content":"","date":1672754400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1672754400,"objectID":"ba607903c9805b90561625e674a4383c","permalink":"/publication/2023-01-patent-11544251/","publishdate":"2023-01-03T15:00:00+01:00","relpermalink":"/publication/2023-01-patent-11544251/","section":"publication","summary":"A database system with a transactional commit protocol based on a safe conjunction of majorities is disclosed. In various embodiments, a directed acyclic graph comprising, for each of a plurality of database transactions, data identi- fying the transaction, data indicatingone or more prior database transactions on which the database transaction depends, and data indicating whether the transaction has been committed is stored. A leading edge comprising a set of committed leaf nodes of the directed acyclic graph is determined. Data representing the leading edge is provided to a transaction coordinator configured to use the leading edge to determine based at least in part on the leading edge to commit a transaction.","tags":["Distributed Databases","Transactions","Scalability"],"title":"Database system with transactional commit protocol based on safe conjunction of majorities","type":"publication"},{"authors":["Irfan Nuri Karaca","Alistair Philip Campbell Jones","Jim Webber"],"categories":[],"content":"","date":1666101600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1666101600,"objectID":"29f867ce343378747ece448b99a4d61c","permalink":"/publication/2022-10-patent-11475065/","publishdate":"2022-10-18T15:00:00+01:00","relpermalink":"/publication/2022-10-patent-11475065/","section":"publication","summary":"Techniques are disclosed to provide guided natural language interactions with a connected data system, such as a graph database. In various embodiments, natural language input associated with a graph database query associated with a graph data set is received. The natural language input is processed to generate a set of candidate strings. At least a subset of the candidate strings is mapped to an entity in the graph data set. The entity and data comprising the graph data are used set to determine a candidate graph pattern associ- ated with the graph database query. The candidate graph pattern is used to guide a user associated with the natural language input to refine the graph database query.","tags":["Graph Databases","Visualization","Natural Language Search"],"title":"Pre-emptive graph search for guided natural language interactions with connected data systems","type":"publication"},{"authors":["Jim Webber","Hugo Firth"],"categories":[],"content":"","date":1664978400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1664978400,"objectID":"752bbecec0d722f81aa491f0a1d0a3b9","permalink":"/publication/2022-10-patent-11481385/","publishdate":"2022-10-05T15:00:00+01:00","relpermalink":"/publication/2022-10-patent-11481385/","section":"publication","summary":"Techniques are disclosed to safely and performantly store data in a distributed graph database. In various embodi- ments, a combination of a replication protocol for data redundancy with a chain-commit protocol is used to ensure a safe ordering of concurrent updates across servers. The resulting protocol allows a distributed graph database to simultaneously uphold ACID properties and a useful degree of scalability through concurrent processing of updates in the typical case, and serialization of updates only where data integrity would otherwise be at risk.","tags":["Distributed Databases","Transactions","Scalability"],"title":"Graph database system to safely store data at high volume and scale","type":"publication"},{"authors":["Jack Waudby","Paul Ezhilchelvan","Isi Mitrani","Jim Webber"],"categories":[],"content":"","date":1663233864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1663233864,"objectID":"4fbd240ce9b466f0350a3a2885a547a1","permalink":"/publication/2022-srds/","publishdate":"2022-09-19T13:58:24+01:00","relpermalink":"/publication/2022-srds/","section":"publication","summary":"Distributed OLTP systems execute the high-overhead, two-phase commit (2PC) protocol at the end of every distributed transaction. Epoch-based commit proposes that 2PC be executed only once for all transactions processed within a time interval called an epoch. Increasing epoch duration allows more transactions to be processed before the common 2PC. It thus reduces 2PC overhead per transaction, increases throughput but also increases average transaction latency. Therefore, required is the ability to choose the right epoch size that offers the desired trade-off between throughput and latency. To this end, we develop two analytical models to estimate throughput and average latency in terms of epoch size taking into account load and failure conditions. Simulations affirm their accuracy and effectiveness. We then present epoch-based multi-commit which, unlike epoch- based commit, seeks to avoid all transactions being aborted when failures occur, and also performs identically when failures do not occur. Our performance study identifies workload factors that make it more effective in preventing transaction aborts and concludes that the analytical models can be equally useful in predicting its performance as well.","tags":["Distributed Databases","Transactions","Two-Phase Commit","Epochs","Analytical solutions","Simulations","Performance Evaluation","Throughput","Latency"],"title":"A Performance Study of Epoch-based Commit Protocols in Distributed OLTP Databases","type":"publication"},{"authors":["Jack Waudby","Paul Ezhilchelvan","Jim Webber"],"categories":["Databases","Concurrency Control","Weak Isolation","Serialization Graph Testing","Mixing-Correct Theorem","YCSB"],"content":"","date":1662368400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1662368400,"objectID":"602897b4016b365a68dc35493b179f64","permalink":"/publication/2022-tpctc/","publishdate":"2022-09-05T10:00:00+01:00","relpermalink":"/publication/2022-tpctc/","section":"publication","summary":"Concurrency control is an integral component in achieving high performance in many-core databases. Implementing serializable transaction processing efficiently is challenging. One approach, serialization graph testing (SGT) faithfully implements the conflict graph theorem by aborting only those transactions that would actually violate serializability (introduce a cycle), thus maintaining the required acyclic invariant. Alternative approaches, such as two-phase locking, disallow certain valid schedules to increase throughput, whereas SGT has the theoretically optimal property of accepting all and only conflict serializable schedules. Historically, SGT was deemed unviable in practice due to the high computational costs of maintaining an acyclic graph. Research has however overturned this historical view by utilising the increased computational power available due to modern hardware. Furthermore, a survey of 24 databases suggests that not all transactions demand conflict serializability but different transactions can perfectly settle for different, weaker isolation levels which typically require relatively lower overheads. Thus, in such a mixed environment, providing only the isolation level required of each transaction should, in theory, increase throughput and reduce aborts. The aim of this paper is to extend SGT for mixed environments subject to Adya’s mixing-correct theorem and demonstrate the resulting performance improvement. We augment the YCSB benchmark to generate transactions with different isolation requirements. For certain workloads, mixed serialization graph testing can achieve up to a 28% increase in throughput and a 19% decrease in aborts over SGT.","tags":[],"title":"Pick \u0026 Mix Isolation Levels: Mixed Serialization Graph Testing","type":"publication"},{"authors":[],"categories":null,"content":"","date":1654700400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1654700400,"objectID":"800e74d76afdb268a7ef964eb9bf1a81","permalink":"/talk/2022-06-graphconnect/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/talk/2022-06-graphconnect/","section":"talk","summary":"A tour of the building blocks of Neo4j that make it super-performant for graph storage, query, and compute.","tags":[],"title":"Keynote Speech","type":"talk"},{"authors":["Jesùs Barrasa","Amy E. Hodler","Jim Webber"],"categories":[],"content":"","date":1625094000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1625094000,"objectID":"4e676945f30155f35f95c4fad2431e63","permalink":"/publication/knowledge-graphs-report/","publishdate":"2021-07-01T00:00:00+01:00","relpermalink":"/publication/knowledge-graphs-report/","section":"publication","summary":"A short introduction to Knowledge Graphs for CIOs, CDOs, and data managers.","tags":[],"title":"Knowledge Graphs","type":"publication"},{"authors":[],"categories":[],"content":"Motivation For several years, I\u0026rsquo;ve been working with Paul Ezhilchelvan, Isi Mitrani, and Jack Waudby from Newcastle University. We\u0026rsquo;ve working on consistency models specifically for graph databases, trying to understand whether consistency models for graph databases are different from other database types and if so how we can preserve correctness while still being useful for demanding production systems. This post is a summary of the work we\u0026rsquo;ve done for a technical generalist audience, and I hope you enjoy reading it.\nThe work has been both fun and fruitful. Our focus has been on edge-distributed graph databases. In this kind of system, nodes (or vertices) reside on a single shard in the system, and relationships (or edges) can connect nodes within that shard and across shards over the network. This results in a model where no denormalisation of the data model is necessary.\nNodes representing Karl and Rosa are on different servers, and there is a FOLLOWS relationship/edge between them which crosses the network. During our collaboration, we\u0026rsquo;ve identified an important safety property called Reciprocal Consistency. Put simply, if the record that stores the Karl node on Server 1 has an entry for an outgoing FOLLOWS relationship to the Rosa node on Server 2 then the record representing the Rosa node should have an entry for an incoming relationship from the Karl node. This stems from the labelled proprety graph model where relationships can be traversed in either direction. Generally, the nodes at the head and tail of a relationship hold reciprocal information, hence are reciprocaly consistent.\nIf you\u0026rsquo;re not familar with graphs, an analogy is to think of foreign key relationships in relational databases. Foreign keys constraints are used to prevent actions that would destroy links between tables and render the model incorrect. Foreign key constraints enforce integrity between a parent table and a child table. The parent table must reference some value in a column in the child table otherwise the constraint is violated (and the transaction causing the update will be rejected). The difference with reciprocal consistency for graphs is that both tables would be parent and child to each other to ensure the integrity of the relationship between them.\nMaintaining reciprocal consistency isn\u0026rsquo;t well addressed in the literature. Some distributed relational databases, like YugabyteDB, preserve foreign key constraints by using strongly consistent (serializable) transaction protocols only where strictly necessary for correctiness and using less expensive (snapshot) protocols everywhere else.\nIn the case of graph databases, the equivalent of foreign key constraints aren\u0026rsquo;t a special case. Relationships in a graph are plentiful and the chance of any individual relationship being distributed across servers (or shards) is around 30% with a good partitioning algorithm like Hugo Firth\u0026rsquo;s Taper.\nTo preserve correctness in an edge-distributed graph database we could choose to fallback to a conservative transaction protocol (like two-phase commit), but we know that will harm performance as a blocking protocol. If we use cheaper models like eventual consistency, we might lose reciprocal consistency. In fact we found that eventually-consistent edge-distributed graph databases will corrupt data under normal operation to the extent that a large, busy production database may be rendered useless a matter of months.\nBut this article isn\u0026rsquo;t really about eventual consistency. Although we started with eventual consistency in mind, our enquiries lead to a more fundamental question: if eventual consistency leads to corruption, are so-called strongly consistent systems immune from corruption for edge-distributed graph databases? Given that question, we\u0026rsquo;ve lately focussed on systems designs that claim to be strongly consistent (using words like ACID) but which nonetheless fail to uphold reciprocal consistency, causing corruption in normal (no-fault) operation.\nCorruption by design is a shocking (and fascinating) result in a strongly consistent system. I\u0026rsquo;ll dig much deeper into the root cause in a moment. But first a little history as to how we found ourselves here.\nThe trouble with eventually-consistent graph databases A few years ago when the (now abandoned) TitanDB was launched I recall thinking that its design was problematic from a safety and performance viewpoint. For performance, the problems were around locality. TitanDB spreads bits of the graph across servers to boost write performance, with less regard to how the data would be queried - the expectation is that most queries will have to cross servers to complete, adding complexity and latency. But a slow database is might still be a safe database, but TitanDB wasn\u0026rsquo;t safe - in allowing uncoordinated writes across servers, race conditions could occur which would leave the database in inconsistent state.\nThis is partially understandable. The primary motivation for TitanDB, its successor JanusGraph, and other similar graph databses was scalability. I think it was a rational decision: the market places a premium on scalability and scalability non-trivial if you also want safety and performance. What I think also helped is that the market tended to assume that features like performance and safety were innately part of anything called a database.\nOf course, scale does not necessarily mean high-performance in absolute terms. Scale means you can add more computers to a system and perform more processing relative to fewer computers in the same system. It\u0026rsquo;s often why Neo4j on a laptop can humiliate scale-out graph databases on many powerful servers.\nIn our work we were less concerned about performance, and much more about the safety properties of eventually-consistent graph databases. You probably already know that eventual consistency provides a straightforward guarantee for a single replica set that it will converge to the same value eventually (perhaps even before the next read in good systems). The value converged upon is influenced by the chosen concurrency control mechanisms (e.g. Last Writer Wins versus Logical Clocks etc), but nonetheless the guarantee is strictly for one replica set/shard. This might be fine for some data types, but we strongly suspected that it is not fine for edge-distributed graphs. Spoiler: it isn\u0026rsquo;t.\nSources of corruption in eventually-consistent graph databases Eventually consistent databases scale because they avoid costly/centralised operations. Because of that, there\u0026rsquo;s no coordination/ordering across the database, just local concurrency controls on each server. The concurrency control might be simple and cheap like Last-Writer-Wins (LWW) or it might be a fancy merge function, but whatever mechanism is chosen, it acts locally on each server. Fortunately anti-entropy functions are available on most databases so that divergence between replicas within a set can be salvaged (though such functions tend not to be aggresively used in case they inhibit performance).\nEven with anti-entropy functionality, with an eventually consistent distributed graph database there are two primary sources of potential corruption:\nThe current transaction happens to read from a replica which is stale and uses that stale data to for updates. This is more complex than the same situation in a KV, document, or column store because graph database queries touch arbitrary keys and so undoing logical corruption is impractical and typically impossible. However, this is solvable with approaches like quorum reads though they will slow down the operation of the database considerably. Two transactions contend on a single relationship/egde which happens to span replica sets (shards from here on) and are applied in a mutually inconsistent order. This is also solvable but requires some functionality to impose ordering, which is expensive completely undermines eventual consistency, and so nobody does this because it implies transactions. The TitanDB team were rigorous enough to call out this problem, but the language they used downplays its signficance. The documentation uses phrases like \u0026ldquo;temporary inconsistency\u0026rdquo; rather than \u0026ldquo;corruption that might be repaired, but might also cause further irreperable corruption\u0026rdquo; and \u0026ldquo;half edges\u0026rdquo; rather than \u0026ldquo;corrupted edge records\u0026rdquo;. While I don\u0026rsquo;t think this mollifying language has directly lead to a slew of copycat databases, it certainly set a tone for ignoring safety properties (which is still followed by other databases in the family).\nQuantifying corruption in no-fault systems It\u0026rsquo;s unsettling to be looking for data corruption for databases operating in a fault-free environment. The word \u0026ldquo;database\u0026rdquo; is closely associated with the notion of safety - we expect to be able to retrieve what we\u0026rsquo;ve stored.\nOur starting point was the prior tacit admission of a possible technical error case from the TitanDB developers. We didn\u0026rsquo;t know, however, if it would be a problem im real systems running in production for a long time. We could just have run the database with a representative workload for many months, but waiting around in real time to see if corruption would occur is expensive in both time and infrastructure bills.\nInstead, I asked academics Paul Ezhilchelvan and Isi Mitrani for help. In a way it was a kind of homecoming for me, being able to work with two of the lecturers who\u0026rsquo;d taught me Computer Science as an undergraduate (a gruelling task no doubt). On that note I\u0026rsquo;ll point out that any errors or misunderstandings are mine alone since Paul and Isi are outstanding computer scientists.\nWe decided to model the effects of failing reciprocal consistency for a busy, long-lived, eventually-consistent distributed graph database. We chose a scale-free graph as the basis for our model, and informally thought of it a social network with a few nodes representing popular celebrities with very high degree, the next few layers with increasing freqency and decreasing degree representing various levels of sub-celebrity influence, scaling all the down to many nodes with very low degree representing most ordinary people.\nOur model treats a graph database as a collection of replica sets or shards each holding some fraction of the overall graph. It has to be distributed, of course, so that we can elicit the mechanical failure modes of distrbuted-edge partitioned graph databases. In our model, usually two connected nodes will be held on a single shard, and by implication so to will the relationships joining them be stored on that shard. However according to research on graph partitioning algorithms by my colleague Hugo Firth, a good partitioning still results in around 30% of relationships connecting nodes that are hosted on different shards - these relationships are said to be distributed.\nThe model allows for write-after-stale-read from a replica as one source of corruption, and also allowed mutually out of order update processing for relationship records that span shards as the other primary source of corruption. Out of order updates have a chance of being overwritten correctly before they\u0026rsquo;re ever seen, but they also have a chance of the stale side of the relationship being read and used to compute future incorrect updates from where it becomes impossible to repair the data in the general case.\nIn our model, relationship records which cross shards are physically implemented as a two reciprocal records on each shard (a common real-world implementation strategy). That is if shard A has a node representing Rosa with an outgoing FOLLOWS relationship to a node representing Karl on shard B, then the Karl node on shard B should have an incoming FOLLOWS from Rosa on shard A.\n// TODO: picture needed\nEqually any properties on that relationship must be identical whether the relationship is traversed head to tail or tail to head.\n// TODO: picture needed\nWe term this reciprocal consistency and it is an invariant on the database so that data can be safely stored. Any deviation from a reciprocally consistent state is corruption, and that corruption has a chance to spread through the graph.\nUsing the model, we showed that for a billions-node scale-free graph and ~10,000 TPS and with some conservative estimates for the likelihood of transactions being applied mutually out of order, that the system would be garbage (defined as 10% corruption) in around 12-18 months.\nSince the model was computationally expensive (many hours of compute time needed for each minor parameter change) we used it to calibrate a computationally cheap numerical approximation which you can parameterise to see how your eventually consistent graph database might behave in production.\nIt\u0026rsquo;s not about eventual consistency, it\u0026rsquo;s about uncoordinated updates Our suspicion going into this work was that eventual consistency was the problematic factor. Clearly if you can read a stale value and write back to the database based on that stale value, you\u0026rsquo;re going to get logical corruption. But that can be mitigated, albeit at a cost in competent eventually consistent systems.\nSo, our focus on eventual consistency wasn\u0026rsquo;t wrong, but it wasn\u0026rsquo;t quite right either. In fact we found that the consistency model for how a replication within a shard was less important than how updates are delivered across shards.\nWith hindsight, eventually consistent databases were obvious because they have no coordination at all and so by implication no consistent ordering of arrival/processing by receiving shards. What\u0026rsquo;s surprising though is if we make the model more generous, we still get corruption.\nLet\u0026rsquo;s assume that the replicas in a shard converge immediately and that faults can never occur. This is an impossible, magical algorithm for replication, and still the database would suffer corruption.\nThe problem is of reciprocal consistency being undermined by race conditions in the presence of concurrent contended transactions. While we have fewer opportunities to read stale data in a single shard (because we assumed instant convergence), it\u0026rsquo;s still possible that transactions will be delivered mutually out of order to a pair of shards.\nLet\u0026rsquo;s play this out. Consider two transactions T1 and T2 which both update a common cross-shard relationship R in some mutally incompatible manner. Drawing on the TitanDB example, this could be where one transaction tries to delete R while the other tries to update it.\nThere are two ways these transactions can achieve a consistent outcome and two ways in which they won\u0026rsquo;t, and since we don\u0026rsquo;t have any coordination logic to impose an ordering (on the basis that it inhibits scalability) then we have to rely on natural arrival order.\nShard 1 Shard 2 Consistent T1-\u0026gt;T2 T1-\u0026gt;T2 Yes T2-\u0026gt;T1 T2-\u0026gt;T1 Yes T2-\u0026gt;T1 T1-\u0026gt;T2 Maybe T1-\u0026gt;T2 T2-\u0026gt;T1 Maybe Corruption can occur when T1 and T2 are processed in different orders on different shards for operations that don\u0026rsquo;t commute. In such cases reciprocal consistency will have been violated.\nFor example, if T1 adds property since:2010 to the FOLLOWS relationship between Rosa and Karl while concurrently T2 adds property since:2015 to the FOLLOWS relationship between Rosa and Karl, then we have a problem. Ideally we\u0026rsquo;d like the values to converge to one of these, but they never will because there is no protocol to enforce consistency across the shards.\nShard 1 (T1-\u0026gt;T2) Shard 2 (T2-\u0026gt;T1) (Rosa)-[:FOLLOWS {since:2010}]-\u0026gt;(remote) (remote)-[:FOLLOWS {since:2015}]-\u0026gt;(Karl) This is a type of non-deterministic corruption where one shard holds the \u0026ldquo;correct\u0026rdquo; record as seen in a strictly serializable history and the other shard holds the \u0026ldquo;incorrect\u0026rdquo; record. In this case the two transactions with inconsistent arrival order do not commute: one adds a property value to a relationship and one deletes that relationship.\nIt\u0026rsquo;s possible that a subsquent write might immediately correct this error with no side-effects, and it\u0026rsquo;s possible that the shard with the \u0026ldquo;correct\u0026rdquo; record might be read. But it\u0026rsquo;s also possible that the shard with the \u0026ldquo;incorrect\u0026rdquo; record will be read, and those incorrect values used to seed further writes, propagating the corruption around the graph. In general, there is no recovery from this corruption when it spreads. It\u0026rsquo;s often a coin toss as to which record is the correct one in the instant after it is written\nI\u0026rsquo;ll reiterate that: without any hardware or software failures, your data will be irreversibly garbage within its production lifetime. That\u0026rsquo;s a shocking result for a class of technology that has a degree of market buy-in.\nOur work has now been multiply peer reviewed and published, with the most recent analysis being in the Journal Queueing Models and Service Management.\nWhen is strongly consistent not strongly consistent? When it\u0026rsquo;s not consistently applied. Other entrants to the graph database market must have also seen the risks of eventual consistency for graphs have and opted to build their offerings atop strongly consistent models to avoid these pitfalls. The approach that I\u0026rsquo;ve seen in two databases (one closed source, one open) is to build strong guarantees into the replica sets (shards) that store the data. This is a very good starting point and is used in their marketing materials to give a sense of safety. Words like \u0026ldquo;ACID\u0026rdquo; and \u0026ldquo;strongly consistent\u0026rdquo; are used frequently to convey the safety properties of the systems.\nBut all is not well here. In fact, despite having better guarantees for consistency within a single replica set than eventually consistent databases, the same global ordering problem haunts these newer databases.\n// They fall foul of consistency within a shard and anything goes between shards.\nAcknowledgements The research work was made possible by a continuing joint effort between Newcastle University and Neo4j. Many thanks to my academic collaborators Paul Ezhilchelvan, Isi Mitrani, and Jack Waudby for entertaining my hunches and putting them on a solid academic foundation.\nMy colleage Hugo Firth (ex-Newcastle Ph.D., like me) provided a great deal of valuable feedback in writing up this piece as well as day to day sensible discussions on reliability in distributed systems.\nLike this? Want to get more involved? I\u0026rsquo;ll make a final pitch and remind you that Neo4j are hiring. So if you want to work with Hugo and me, then take a look at our open roles.\n","date":1606953647,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606953647,"objectID":"2a0859241cd9a3797804b49d5aad14f9","permalink":"/post/2020-12-weak-stong-consistency/","publishdate":"2020-12-03T00:00:47Z","relpermalink":"/post/2020-12-weak-stong-consistency/","section":"post","summary":"Thoughts on the design of distributed graph databases that use strongly consistent methods for the data stored on their shards, but pay no regard to ordering of concurrent updates.","tags":["graph databases","consistency"],"title":"Strong Consitency Claims in Distributed Graph Databases","type":"post"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1606818264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606818264,"objectID":"58cb34f385492c6cb94d0392285897b5","permalink":"/publication/2020-ndbj-coming-age-graph-db/","publishdate":"2020-12-01T10:24:24Z","relpermalink":"/publication/2020-ndbj-coming-age-graph-db/","section":"publication","summary":"A short introduction to Neo4j and Cypher from the viewpoint of someone who has been with the technology for a long time.","tags":[],"title":"The Coming of Age of Graph Databases","type":"publication"},{"authors":[],"categories":[],"content":"Back in 2015 I bought a BMW i3 REX, and at the time had a 7kW charger charging socket fitted from ChargeMaster (now part of BP). It worked fine, and since the 2015 i3 has a small battery (~20kWh) full charges took just a few short hours. Wonderfully boring and predictable.\nFast forward to present day and the ChargeMaster socket repeatedly overheats and cuts out leaving me with potentially not enough charge for the day (ok, so there\u0026rsquo;s the range extender but that defeats the point). After a few calls to genuinely lovely people at BP ChargeMaster, we\u0026rsquo;re not getting anywhere fast. The warranty has expired and I never did talk to anyone - nice as they were - that I\u0026rsquo;d trust to wire a plug. But if I hand over another £500 I can get a replacement at some point.\n£500 for a socket - even a special, high-current, safety-concious socket is a lot of cash. So let\u0026rsquo;s look around first.\nMy first port of call was the Rolec sockets. Since this is a straight swap of like for like, it looked like a winner. It\u0026rsquo;s a few quid cheaper than the ChargeMaster kit too. Only problem is that electrical regulations have tightened up since my original socket was installed. The 18th edition regs require additional earthing to protect from the terrifying possibility of PEN faults on TN-C-S supplies. Installing an earth rod is a big undertaking, so what to do?\nEarth rods are not strictly required for indoor use (on the basis that you\u0026rsquo;re unlikely to sever the earth), but I\u0026rsquo;m conservative around mains electricity.\nAs it happens there is a more expensive but far better value EV charging socket available - the MyEnergi Zappi - which does not require an earth rod and has clever circuitry to detect PEN faults. It\u0026rsquo;s a couple of hundred quid more at ~£700 plus another few quid for associated smart gadgets. But this is easily made up for by the simple install and being 18th edition compliant without the cost and (surprising) complexity of correctly installing an earth rod.\nHaving received the Zappi, Harvi and Hub the installation was easy enough. In the Consumer Unit (\u0026ldquo;fuse box\u0026rdquo;), the existing 32A Type C MCB had to be replaced with a 32A B-curve MCB. This circuit on my CU happens to be RCD protected, but that\u0026rsquo;s not critical since the Zappi has RCD protection on the AC and DC circuits (18th edition regs again). My wiring was already present and suitable from the previous installation, 40A rated, wall-pinned and visually in excellent condition. It only needed 30-40cm of 10mm twin and earth from the existing junction box through the conduit and into the Zappi.\nZappi unit looks nice enough, for a garage anyway. I recently bought a ferrule set and crimper after seeing one in use on a video by Artisan Electrics which really made the 10mm cable connections feel very robust. I would recommend this since they\u0026rsquo;re cheap to buy and easy to use.\nSo far so good - the electrical work is very easy and because the charger has clever electronics, it\u0026rsquo;s just like wiring a regular domestic socket.\nOne of the nice things about the Zappi is that it\u0026rsquo;s \u0026ldquo;smart.\u0026rdquo; It can try to use on-site generation to charge your EV when there\u0026rsquo;s excess power. And even if there\u0026rsquo;s a heavy load on your main supply (I live in the UK, so single-phase supplies are very common for houses), it\u0026rsquo;ll adjust its power delivery so that the house as a whole never draws more the mains rating (100A for me).\nLooks like I should plug the car in. Zappi senses its electrical environment using current transformer (CT) clamps. Remembering A-level physics, the current passing along a conductor can induce a current in a nearby coil proportionally to the current flowing in the main conductor which can be (safely) measured. Zappi comes with a CT clamp and I used the Harvi which provides a wireless bridge from the CT clamp to the Zappi instead of running the cable across the ceiling of my garage.\nI hadn\u0026rsquo;t read the instructions well enough and there were two problems here:\nYou have to tell Zappi that its internal CT1 is set to NONE. Then you have to nagivate to the Harvi device and set its CT1 to GRID. Ok, so took me a little while to fathom that, but got there. The bigger downside is that when using Harvi to wirelessly monitor the grid line, the maximum permissible mains current is 65A, which is 35A less than my mains rating (and indeed could supply a whole other charger). It\u0026rsquo;s not a problem for now, but adding a second EV and Zappi in the future could lead to slower and less predictable charging rates. My solution to this will be to hardwire the grid CT clamp to the Zappi by running cable round the garage. I\u0026rsquo;ll then use a second CT clamp plus the Harvi (bought and paid for, so I have to put it to use) to monitor solar output. Solar monitoring is just a nerd thing so that I can see generation on the app: the Zappi does not use the solar CT clamp in its control algorithm.\nAll of this comes together in a nice app if you use the Hub, so you can see real-time use and program EV charging without having to be at the Zappi.\nHub sitting in a rat\u0026rsquo;s nest of wires with Google wifi. Don\u0026rsquo;t judge me. I\u0026rsquo;m very impressed so far. Sure there were a couple of little gotchas while I learned my way around the menus, but otherwise a straightforward experience. Funelling excess solar into the car automatically is super nice, and the unit looks smart and is safe. The setup can also handle a static battery installation (with more CT clamps) and can prioritise whether EV or static battery storage gets excess solar power and it can also minimise using the battery to charge the car (which is very sensible).\n","date":1600678847,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600678847,"objectID":"967b4cf225ad9dcb6a484f1d24d4e132","permalink":"/post/2020-09-zappi-installation/","publishdate":"2020-09-21T10:00:47+01:00","relpermalink":"/post/2020-09-zappi-installation/","section":"post","summary":"Things learned installing a Zappi home EV charging socket.","tags":["zappi","EV"],"title":"Zappi Installation","type":"post"},{"authors":[],"categories":[],"content":"I\u0026rsquo;ve just upgraded to the new modular Hugo static site builder and have taken the opportunity to smarten up a few things on my site. In the meantime I\u0026rsquo;m slowly migrating over some content like my publication record. Stay tuned.\n","date":1600173527,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600173527,"objectID":"3b38e84b67ec02998b14ff8313d21021","permalink":"/post/site-upgrade/","publishdate":"2020-09-15T13:38:47+01:00","relpermalink":"/post/site-upgrade/","section":"post","summary":"I\u0026rsquo;ve just upgraded to the new modular Hugo static site builder and have taken the opportunity to smarten up a few things on my site. In the meantime I\u0026rsquo;m slowly migrating over some content like my publication record.","tags":[],"title":"Site Upgrade","type":"post"},{"authors":["Paul Ezhilchelvan","Isi Mitrani","Jim Webber"],"categories":[],"content":"","date":1600161864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600161864,"objectID":"2e2866f09407015e33e96ca63b5019a3","permalink":"/publication/2020-qmsm/","publishdate":"2020-09-15T10:24:24+01:00","relpermalink":"/publication/2020-qmsm/","section":"publication","summary":"Eventually consistent distribted graph databases corrupt data. This paper shows the rate at corruption leading to abandomment of a database and provides calibrated tools for reasoning about the spread of corruption in production databases.","tags":[],"title":"Modeling the Gradual Degradation of Eventually-Consistent Distributed Graph Databases","type":"publication"},{"authors":["Jim Webber","Rik van Bruggen"],"categories":[],"content":"","date":1600120194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600120194,"objectID":"012f8de40bf22bc99494f114e1714437","permalink":"/publication/graph-databases-for-dummies/","publishdate":"2020-09-14T22:49:54+01:00","relpermalink":"/publication/graph-databases-for-dummies/","section":"publication","summary":"A practice and humane introduction to graph databases and Neo4j, _Graph Databases For Dummies_ walks you through modeling, querying, and importing graph data, all the way through to your first production system.","tags":[],"title":"Graph Databases for Dummies","type":"publication"},{"authors":["Jack Waudby","Paul Ezhilchelvan","Jim Webber","Isi Mitrani"],"categories":[],"content":"","date":1587979464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587979464,"objectID":"102c145c0143797b89daffdb85ab1056","permalink":"/publication/2020-papoc/","publishdate":"2020-04-27T10:24:24+01:00","relpermalink":"/publication/2020-papoc/","section":"publication","summary":"Reciprocal consistency is at the heart of dependable distributed graph databases. This work examines methods for preserving reciprocal consistency and thus data correctness.","tags":[],"title":"Preserving reciprocal consistency in distributed graph databases","type":"publication"},{"authors":["Paul Ezhilchelvan","Isi Mitrani","Jack Waudby","Jim Webber"],"categories":[],"content":"","date":1574933064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574933064,"objectID":"0c33e516b452f722962807ba6cb8d7f3","permalink":"/publication/2019-epew/","publishdate":"2019-11-28T10:24:24+01:00","relpermalink":"/publication/2019-epew/","section":"publication","summary":"A novel concurrency control mechanism for distributed graph databases that aborts any transaction that could introduce inconsistencies, along with peformance evaluation","tags":[],"title":"Design and Evalution of an Edge-based Concurrency Protocol for Distributed Graph Databases","type":"publication"},{"authors":["Jim Webber","Ian S. Robinson","Tobias Lindaaker","Alistair Philip Campbell Jones"],"categories":[],"content":"","date":1496757600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496757600,"objectID":"26d2aac5d00b6499c9de135260d9a23b","permalink":"/publication/2022-10-patent-9672266/","publishdate":"2017-06-06T15:00:00+01:00","relpermalink":"/publication/2022-10-patent-9672266/","section":"publication","summary":"Methods of conducting database transactions. One such method comprises receiving data to be written to a database; identifying a set of shard replicas corresponding to the database to which the data is to be written; transmitting, to each of the replicas in the set, a request to write the data thereto; receiving votes back from the replicas in the set, each vote representing whether the respective replica com- mits to a writing of the data thereto; determining whether to commit to the writing of the data to the database according to whether a majority of the replicas of every shard having replicas in the set has transmitted a vote committing to the writing of the data thereto; and transmitting an outcome of the determining to each of the replicas in the set.","tags":["Graph Databases","Distributed Transactions"],"title":"Method and apparatus for ensuring consistent outcomes in updates to distributed databases","type":"publication"},{"authors":["Georgios Goumas","Konstantinos Nikas","Ewnetu Bayuh Lakew","Christos Kotselidis","Andrew Attwood","Erik Elmroth","Michail Flouris","Nikos Foutris","John Goodacre","Davide Grohmann","Vasileios Karakostas","Panagiotis Koutsourakis","Martin Kersten","Mikel Lujàn","Einar Rustad","John Thomson","Luis Tomás","Atle Vesterkjaer","Jim Webber","Ying Zhang","Nectarios Koziris"],"categories":[],"content":"","date":1496635200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496635200,"objectID":"da1be186458f9438a3389fc317ac016e","permalink":"/publication/2017-icdcs/","publishdate":"2017-06-05T09:00:00+05:00","relpermalink":"/publication/2017-icdcs/","section":"publication","summary":"An overview of the ACTiCLOUD project for adaptable, data-intensive cloud workloads.","tags":[],"title":"ACTiCLOUD: Enabling the Next Generation of Cloud Applications","type":"publication"},{"authors":["Jim Webber","Ian S. Robinson","Tobias Lindaaker","Alistair Philip Campbell Jones"],"categories":[],"content":"","date":1477404000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1477404000,"objectID":"b88eb13db92dbb2ef9862caba353a790","permalink":"/publication/2022-10-patent-9477779/","publishdate":"2016-10-25T15:00:00+01:00","relpermalink":"/publication/2022-10-patent-9477779/","section":"publication","summary":"A method and apparatus for partitioning a graph database that includes nodes connected to one another is presented. The method entails determining a node type indicating a type of node that is to be used as mapped nodes, and upon receiving a new node, placing the new node in a partition according to one or more property values associated with the new node fi it is a mapped node, and placing the new node in a partition according to its connections to other nodes if it is not a mapped node. The apparatus includes modules containing computer-executable instructions to perform the above method.","tags":["Graph Databases","Graph Partitioning"],"title":"Graph database devices and methods for partitioning graphs","type":"publication"},{"authors":["Jonathan Sumrall","George H. L. Fletcher","Alexandra Poulovassilis","Johan Svensson","Magnus Vejlstrup","Chris Vest","Jim Webber"],"categories":[],"content":"","date":1471944264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1471944264,"objectID":"65782ecd1aa72313de34ee7bd70c59e6","permalink":"/publication/2016-pelga/","publishdate":"2016-08-23T10:24:24+01:00","relpermalink":"/publication/2016-pelga/","section":"publication","summary":"Results of an investigation into path indexing for graph databases.","tags":[],"title":"Investigations on path indexing for graph databases","type":"publication"},{"authors":["Ian Robinson","Jim Webber","and Emil Eifrem"],"categories":[],"content":"","date":1433842246,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1433842246,"objectID":"e6d74f37bf5f59c2177fa2ab2f68a92a","permalink":"/publication/graph-databases/","publishdate":"2015-06-09T10:30:46+01:00","relpermalink":"/publication/graph-databases/","section":"publication","summary":"The first book on graph databases, now in its second edition. Provides in-depth coverage of graph modeling and querying, as well as thorough explanations of the internal workings of Neo4j.","tags":[],"title":"Graph Databases","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1380623064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1380623064,"objectID":"22b47f60893b3e34045dd56d1b58622e","permalink":"/publication/2013-sdj-beginning-neo4j/","publishdate":"2013-10-01T10:24:24Z","relpermalink":"/publication/2013-sdj-beginning-neo4j/","section":"publication","summary":"An article on starting out with graphs and Neo4j 2.0, with a focus on the Cypher query language.","tags":[],"title":"Starting Graph Databases with Neo4j 2.0","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1350612000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1350612000,"objectID":"77573ae39b955b0bec2da149e968fb5f","permalink":"/publication/2012-splash/","publishdate":"2012-10-19T09:00:00+07:00","relpermalink":"/publication/2012-splash/","section":"publication","summary":"A tutorial for learning to program with Neo4j's graph model.","tags":[],"title":"A programmatic introduction to Neo4j","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1338974664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1338974664,"objectID":"94eb030ff0b0428af97c77c324ce8c6f","permalink":"/publication/2012-euro-data-forum/","publishdate":"2012-06-06T10:24:24+01:00","relpermalink":"/publication/2012-euro-data-forum/","section":"publication","summary":"Prelimary work on support for supporting very large data sets in graph databases.","tags":[],"title":"Towards a Horizontally Scalable Graph Database","type":"publication"},{"authors":["Jim Webber","Ian Robinson"],"categories":[],"content":"","date":1338542664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1338542664,"objectID":"732f827cea37ace5d7dbdf913df52bca","permalink":"/publication/2011-osj-graphdb-doctor-who/","publishdate":"2012-06-01T10:24:24+01:00","relpermalink":"/publication/2011-osj-graphdb-doctor-who/","section":"publication","summary":"How to build a graph model in Neo4j, with examples from the long history of Doctor Who!","tags":[],"title":"Exterminate! Your Database Woes with Neo4j","type":"publication"},{"authors":["Jim Webber","Savas Parastatidis","Ian Robinson"],"categories":[],"content":"","date":1285579988,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1285579988,"objectID":"2db9f55ef220f36533b80ec38f5b0c94","permalink":"/publication/rest-in-practice/","publishdate":"2010-09-27T10:33:08+01:00","relpermalink":"/publication/rest-in-practice/","section":"publication","summary":"Why don't typical enterprise projects go as smoothly as projects you develop for the Web? Does the REST architectural style really present a viable alternative for building distributed systems and enterprise-class applications? In this insightful book, three SOA experts provide a down-to-earth explanation of REST and demonstrate how you can develop simple and elegant distributed hypermedia systems by applying the Web's guiding principles to common enterprise computing problems. You'll learn techniques for implementing specific Web technologies and patterns to solve the needs of a typical company as it grows from modest beginnings to become a global enterprise.","tags":[],"title":"Rest in Practice","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber","Guilherme Silveira","Ian Robinson"],"categories":[],"content":"","date":1272273864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1272273864,"objectID":"29547a511095258faf0299a4817c2a6f","permalink":"/publication/2010-ws-rest/","publishdate":"2010-04-26T10:24:24+01:00","relpermalink":"/publication/2010-ws-rest/","section":"publication","summary":"Demonstrating practical RESTful business protocols with framework support from Restfulie.","tags":[],"title":"The Role of Hypermedia in Distributed System Development","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber","Simon Woodman","Dean Kuo","Paul Greenfield"],"categories":[],"content":"","date":1194686664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1194686664,"objectID":"f1ffd4bf909b34be1b783cee39581dd7","permalink":"/publication/2007-11-ssdl/","publishdate":"2007-11-10T10:24:24+01:00","relpermalink":"/publication/2007-11-ssdl/","section":"publication","summary":"Simplifying Web Services interfaces in the general case, and making it possible to perform model checks on multi-party protocols.","tags":[],"title":"SSDL - The SOAP Service Description Language","type":"publication"},{"authors":["Patric Fornasier","Jim Webber","Ian Gorton"],"categories":[],"content":"","date":1183973064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1183973064,"objectID":"2ceee7f7b514a955112f55e88940bc54","permalink":"/publication/2007-acm-cbse/","publishdate":"2007-07-09T10:24:24+01:00","relpermalink":"/publication/2007-acm-cbse/","section":"publication","summary":"An implementation of SSDL tooling and an empirical demonstration of how developers can readily use SSDL to build robust services and systems of services.","tags":[],"title":"Soya: a Programming Model and Runtime Environment for Component Composition using SSDL","type":"publication"},{"authors":["Dean Kuo","Alan Fekete","Paul Greenfield","Surya Nepal","John Zic","Savas Parastatidis","Jim Webber"],"categories":[],"content":"","date":1158571464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1158571464,"objectID":"dbbf72d6161e59cd41544db224d49f5d","permalink":"/publication/2006-ieee-scc/","publishdate":"2006-09-18T10:24:24+01:00","relpermalink":"/publication/2006-ieee-scc/","section":"publication","summary":"Using SSDL to reason about message exchange patterns (or business protocols) between autonomous services.","tags":[],"title":"Expressing and Reasoning about Service Contracts in Service-Oriented Computing","type":"publication"},{"authors":["Emerson Ribeiro De Mello","Savas Parastatidis","Philipp Reinecke","Chris Smith","Aad van Moorsel","Jim Webber"],"categories":[],"content":"","date":1158571464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1158571464,"objectID":"dfc5c07ea629edfc1a57cfbdd610d389","permalink":"/publication/2006-ieee-icws/","publishdate":"2006-09-18T10:24:24+01:00","relpermalink":"/publication/2006-ieee-icws/","section":"publication","summary":"A realistic workflow appliation for real-estate using SSDL to reason about correctness of multiparty protocols over the Internet.","tags":[],"title":"Secure and Provable Service Support for Human-Intensive Real-Estate Processes","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1138785864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1138785864,"objectID":"f2bb113f0b00e1a7ce8a91c7cbb3101d","permalink":"/publication/2006-csi/","publishdate":"2006-02-01T10:24:24+01:00","relpermalink":"/publication/2006-csi/","section":"publication","summary":"A companion update to the Developing Enterprise Web Services book after two years additional standards work.","tags":[],"title":"An Architect’s Guide to Developing Enterprise Web Services","type":"publication"},{"authors":["Savas Parastatidis","Simon Woodman","Jim Webber","Dean Kuo","Paul Greenfield"],"categories":[],"content":"","date":1138785864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1138785864,"objectID":"4e385df883e3a0283edb3d667fcb6319","permalink":"/publication/2006-ieee-internet-computing/","publishdate":"2006-02-01T10:24:24+01:00","relpermalink":"/publication/2006-ieee-internet-computing/","section":"publication","summary":"An overview of the SOAP Service Description Language (SSDL) and its support for multi-party end-to-end business protocols.","tags":[],"title":"Asynchronous messaging between Web services using SSDL","type":"publication"},{"authors":["Jen-Yao Chung","George Feuerlicht","Jim Webber (Eds.)"],"categories":[],"content":"","date":1134379464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1134379464,"objectID":"5ab061b53aaae5bfc0648ad4c4da5b4b","permalink":"/publication/2005-wdsoa/","publishdate":"2004-09-15T10:24:24+01:00","relpermalink":"/publication/2005-wdsoa/","section":"publication","summary":"Organising and editing the proceedings of a workshop on the design of service-oriented systems alongside ICSOC 2005.","tags":[],"title":"First International Workshop on Design of Service-Oriented Applications (WDSOA'05)","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber"],"categories":[],"content":"","date":1120181064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1120181064,"objectID":"a2e201a6e3b8cf7a72c6402b2ecfddce","permalink":"/publication/2005-msaj-hp-soa/","publishdate":"2005-07-01T10:24:24+09:00","relpermalink":"/publication/2005-msaj-hp-soa/","section":"publication","summary":"An article on High Performance Computing (HPC) Grids built with SOA.","tags":[],"title":"Service-oriented, Distributed, High-Performance Computing","type":"publication"},{"authors":["Malcolm Atkinson","David DeRoure","Alistair Dunlop","Geoffrey Fox","Peter Henderson","Tony Hey","Norman Paton","Steven Newhouse","Savas Parastatidis","Anne Trefethen","Paul Watson","Jim Webber"],"categories":[],"content":"","date":1107768264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1107768264,"objectID":"4121c78da6dabe474e2ad4af513006da","permalink":"/publication/2005-journal-concurrency-computation-ws-gaf/","publishdate":"2005-02-07T10:24:24+01:00","relpermalink":"/publication/2005-journal-concurrency-computation-ws-gaf/","section":"publication","summary":"A roadmap for protocol standardisation to ease the adoption of e-science and grid computing technology.","tags":[],"title":"Web Service Grids: An Evolutionary Approach","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber","Paul Watson","Thomas Rischbeck"],"categories":[],"content":"","date":1107768264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1107768264,"objectID":"d79d430bd1e3a9a558d96bad5256d0fb","permalink":"/publication/2005-journal-concurrency-computation-ws-i-plus/","publishdate":"2005-02-07T10:24:24+01:00","relpermalink":"/publication/2005-journal-concurrency-computation-ws-i-plus/","section":"publication","summary":"A mapping of requirements for global scale grid computing onto standard Web Services protocols.","tags":[],"title":"WS‐GAF: a framework for building Grid applications using Web Services","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber"],"categories":[],"content":"","date":1095240264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1095240264,"objectID":"f163d804ce861c76154bf4c944cb2688","permalink":"/publication/2004-ieee-scc/","publishdate":"2004-09-15T10:24:24+01:00","relpermalink":"/publication/2004-ieee-scc/","section":"publication","summary":"A framework for reasoning about an immature and chaotic set of protocols and standards for building potentially long-lived systems.","tags":[],"title":"Assessing the Risk and Value of Adopting Emerging and Unstable Web Services Specifications","type":"publication"},{"authors":["Savas Parastatidis","Paul Watson","Jim Webber"],"categories":[],"content":"","date":1088069064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1088069064,"objectID":"4ea79eb23af38d9323f7cb9f9b9ed95d","permalink":"/publication/2004-delos/","publishdate":"2004-06-24T10:24:24+01:00","relpermalink":"/publication/2004-delos/","section":"publication","summary":"Showing how large-scale Grid computing designed as a service-oriented architecture and implemented by standard Web Services.","tags":[],"title":"Grid Computing using Web Services Technologies","type":"publication"},{"authors":["Savas Parastatidis","Jim Webber"],"categories":[],"content":"","date":1086427464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1086427464,"objectID":"3b7e4d7db6edfa88d7d8f40567365849","permalink":"/publication/2004-ggf/","publishdate":"2004-06-05T10:24:24+01:00","relpermalink":"/publication/2004-ggf/","section":"publication","summary":"The WS-GAF Registry Service is a naming and metadata service which allows clients to late bind (in a limited fashion) to services as part of a larger grid application.","tags":[],"title":"The WS-GAF Registry Service","type":"publication"},{"authors":["Jim Webber","Savas Parastatidis","Mark Little"],"categories":[],"content":"","date":1083374664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1083374664,"objectID":"42fb89e5407f3afae7f5969fdf06a54e","permalink":"/publication/2004-wsj-wsdl-not-idl/","publishdate":"2004-05-01T10:24:24+09:00","relpermalink":"/publication/2004-wsj-wsdl-not-idl/","section":"publication","summary":"An article how two competing/overlapping protocols each support the notion of conversational state in a system of Web Services.","tags":[],"title":"Stateful Interactions in Web Services: A Comparison of WS-Context and WS-ResourceFramework ","type":"publication"},{"authors":["Jim Webber","Savas Parastatidis"],"categories":[],"content":"","date":1080782664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1080782664,"objectID":"dd464a4b90fcb5ed8f803db2367b84ad","permalink":"/publication/2005-wsj-stateful-interactions/","publishdate":"2004-04-01T10:24:24+09:00","relpermalink":"/publication/2005-wsj-stateful-interactions/","section":"publication","summary":"An article about how WSDL should be considered a contract language for message exchanges, rather than an IDL for object interactions.","tags":[],"title":"Why WSDL is not Yet Another Object IDL","type":"publication"},{"authors":["Jim Webber","Savas Parastatidis"],"categories":[],"content":"","date":1072920264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1072920264,"objectID":"70b361bd7c81c0501a24a4764d8b8c00","permalink":"/publication/2004-wsj-horses-for-courses/","publishdate":"2004-01-01T10:24:24+09:00","relpermalink":"/publication/2004-wsj-horses-for-courses/","section":"publication","summary":"An article on the differences between loose coupling in object-oriented and service-oriented systems, and how treating services like remote objects leads to tight coupling.","tags":[],"title":"Horses for Courses: Services, Objects, and Loose Coupling","type":"publication"},{"authors":["Jim Webber","Mark Little"],"categories":[],"content":"","date":1070274264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1070274264,"objectID":"c6d899e38f3749bc4ea685ca8b381d70","permalink":"/publication/2003-wsj-ws-caf/","publishdate":"2003-12-01T10:24:24Z","relpermalink":"/publication/2003-wsj-ws-caf/","section":"publication","summary":"An overview of the three-layered WS-CAF framework for distributed context, coordination, and transactions.","tags":[],"title":"Introducting WS-CAF","type":"publication"},{"authors":["Sandeep Chatterjee","Jim Webber"],"categories":[],"content":"","date":1068804065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1068804065,"objectID":"b4cd62469174a27b44a6b9937da6df10","permalink":"/publication/developing-enterprise-web-services/","publishdate":"2003-11-14T11:01:05+01:00","relpermalink":"/publication/developing-enterprise-web-services/","section":"publication","summary":"This was one of the first books to demonstrate how to build (WS-*) Web Services with enterprise-class reliability, and performance. This book takes a no-nonsense view of architecting and constructing enterprise-class Web services and applications. The authors assess the state of the art of the Web services platform circa 2004, offering best practices and new architectural patterns for taking advantage of Web Services. _While the architectural patterns in this book generally remain worthwhile today, the protocols and standards covered are now looking somewhat out of date, especially since there is a strong groundswell towards building RESTful systems on the Web rather than tunnelling through HTTP with XML payloads._","tags":[],"title":"Developing Enterprise Web Services","type":"publication"},{"authors":["Jim Webber","Savas Parastatidis"],"categories":[],"content":"","date":1067682264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1067682264,"objectID":"995587420431af10e1cf043dbf5bcfbd","permalink":"/publication/2003-wsj-demystifying-soa/","publishdate":"2003-11-01T10:24:24Z","relpermalink":"/publication/2003-wsj-demystifying-soa/","section":"publication","summary":"An article on designing services in a Service-Oriented Architecture.","tags":[],"title":"Demystifying Service Oriented Architectures","type":"publication"},{"authors":["Jan Alexander","Doug Bunting","Martin Chapman","Mark Little","Jeff Mischkinsky","Dale Moberg","Ramesh Nagappan","Eric Newcomer","Keith Swenson","Jim Webber","Pete Wenzel"],"categories":[],"content":"","date":1065518664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1065518664,"objectID":"050b2398f4a0d8059b7f8bc366968852","permalink":"/publication/2007-11-ws-caf/","publishdate":"2003-10-07T10:24:24+01:00","relpermalink":"/publication/2007-11-ws-caf/","section":"publication","summary":"Defining an open framework for supporting coordinated and transactional compositions of multiple Web services applications.","tags":[],"title":"OASIS Web Services Composite Application Framework (WS-CAF)","type":"publication"},{"authors":["Jim Webber and Mark Little"],"categories":[],"content":"","date":1057051464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1057051464,"objectID":"029e033e04b5f47b6b72d5606fae2dca","permalink":"/publication/2003-wsj-bpel4ws/","publishdate":"2003-07-01T10:24:24+01:00","relpermalink":"/publication/2003-wsj-bpel4ws/","section":"publication","summary":"The final article in a series of articles on safely executing complex business protocols over Web Services. This focuses on business processes supported by transactional Web Services.","tags":[],"title":"Introducing BPEL4WS","type":"publication"},{"authors":["Jim Webber","Mark Little"],"categories":[],"content":"","date":1054459464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1054459464,"objectID":"5f88e156f420867406b9c65d5e681fd8","permalink":"/publication/2003-wsj-ws-transaction/","publishdate":"2003-06-01T10:24:24+01:00","relpermalink":"/publication/2003-wsj-ws-transaction/","section":"publication","summary":"The second and third in a series of articles on safely executing complex business protocols over Web Services. This focuses on atomic transactions and business activities layered atop WS-Coordination.","tags":[],"title":"Introducting WS-Transaction","type":"publication"},{"authors":["Jim Webber","Mark Little"],"categories":[],"content":"","date":1051781064,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1051781064,"objectID":"99f76112afcbcebf3b791e978bf5d6af","permalink":"/publication/2003-wsj-ws-coordination/","publishdate":"2003-05-01T10:24:24+01:00","relpermalink":"/publication/2003-wsj-ws-coordination/","section":"publication","summary":"The first in a series of articles on safely executing complex business protocols over Web Services. This focuses on coordination as a general mechanism.","tags":[],"title":"Introducting WS-Coordination","type":"publication"},{"authors":["Sanjay Dalal","Mark Little","Mark Potts","Sazi Temel","Jim Webber"],"categories":[],"content":"","date":1044091464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1044091464,"objectID":"cb640e5515ef8f420ed24687e3c8bb76","permalink":"/publication/2003-ieee-computing/","publishdate":"2003-02-01T10:24:24+01:00","relpermalink":"/publication/2003-ieee-computing/","section":"publication","summary":"An overview of the OASIS Business Transactions Protocol for reaching agreement on the Internet.","tags":[],"title":"Coordinating Business Transactions on the Web","type":"publication"},{"authors":["Jim Webber and Mark Little"],"categories":[],"content":"","date":1035973464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1035973464,"objectID":"9a88b1e731ae6339c5093f7e11b2b1ff","permalink":"/publication/2002-wsj-building-with-btp/","publishdate":"2002-10-30T10:24:24Z","relpermalink":"/publication/2002-wsj-building-with-btp/","section":"publication","summary":"A two-part article on building and composing transactional Web Services.","tags":[],"title":"Building Transactional Web Services with OASIS BTP","type":"publication"},{"authors":["Lindsay Marshall","Jim Webber"],"categories":[],"content":"","date":1024392264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1024392264,"objectID":"ec947253e5ff0dd69d476af66e2d6480","permalink":"/publication/2002-ppig/","publishdate":"2002-06-18T10:24:24+01:00","relpermalink":"/publication/2002-ppig/","section":"publication","summary":"Thinking about how programmers interact, the stories they tell, and how they impact software engineering.","tags":[],"title":"The Misplaced Comma: Programmers’ Tales and Traditions","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":1020162264,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1020162264,"objectID":"977732a4b0177a28d4656a92c23d523e","permalink":"/publication/2002-wsj-oasis-btp/","publishdate":"2001-11-30T10:24:24Z","relpermalink":"/publication/2002-wsj-oasis-btp/","section":"publication","summary":"A guest editorial on using OASIS BTP execute transactions between Web Services.","tags":[],"title":"The Smart Money's on OASIS BTP","type":"publication"},{"authors":["Jim Webber","Victor Corrales","Mark Little","Savas Parastatidis"],"categories":[],"content":"","date":1007115864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1007115864,"objectID":"dd7f5510f0f4e1817246fa20d51d683d","permalink":"/publication/2001-app-dev-advisor/","publishdate":"2001-11-30T10:24:24Z","relpermalink":"/publication/2001-app-dev-advisor/","section":"publication","summary":"Magazine article on using OASIS BTP to enable transactions between Web Services.","tags":[],"title":"Making Web Services Work","type":"publication"},{"authors":["Jim Webber","P.A. Lee"],"categories":[],"content":"","date":988622664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":988622664,"objectID":"5e2a670d8e40615e3409a7af7283a3dd","permalink":"/publication/2001-visual-langs/","publishdate":"2001-04-30T10:24:24+01:00","relpermalink":"/publication/2001-visual-langs/","section":"publication","summary":"A visual, object-oriented parallel programming language for non-specialists.","tags":[],"title":"Visual, Object-Oriented Development of Parallel Applications","type":"publication"},{"authors":["Jim Webber"],"categories":[],"content":"","date":970219464,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":970219464,"objectID":"8bd57ab7e046f9ce28104f8667a8fd0f","permalink":"/publication/2000-phd-thesis/","publishdate":"2000-09-29T10:24:24+01:00","relpermalink":"/publication/2000-phd-thesis/","section":"publication","summary":"My Ph.D. thesis on visual programming for high peformance computing.","tags":[],"title":"Visual Object-Oriented Development of Parallel Applications","type":"publication"},{"authors":["Jim Webber","P.A. Lee"],"categories":[],"content":"","date":968577864,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":968577864,"objectID":"ce300b77a4df5186aa1248a760f61e88","permalink":"/publication/2000-ieee-visual-languages/","publishdate":"2000-09-10T10:24:24+01:00","relpermalink":"/publication/2000-ieee-visual-languages/","section":"publication","summary":"The Vorlon hybrid textual-visual parallel programming language.","tags":[],"title":"Visual, Object-Oriented Development of Parallel Applications","type":"publication"},{"authors":["Lindsay Marshall","Jim Webber"],"categories":[],"content":"","date":955358664,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":955358664,"objectID":"7590b81462668f80e2b1283c3a1a80c9","permalink":"/publication/2000-ppig/","publishdate":"2000-04-10T10:24:24+01:00","relpermalink":"/publication/2000-ppig/","section":"publication","summary":"Thinking about programmers' susperstitions and taboos and the effects they have on software development.","tags":[],"title":"Gotos Considered Harmful and Other Programmers' Taboos","type":"publication"}]